import{_ as i,r as l,o as c,c as r,a as n,d as a,w as o,b as s,e as d}from"./app-d8a54453.js";const p={},u=n("h1",{id:"python框架",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#python框架","aria-hidden":"true"},"#"),s(" Python框架")],-1),h={class:"table-of-contents"},k=n("h2",{id:"网络框架",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#网络框架","aria-hidden":"true"},"#"),s(" 网络框架")],-1),_=n("h3",{id:"flask",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#flask","aria-hidden":"true"},"#"),s(" Flask")],-1),v=n("blockquote",null,[n("p",null,"📜简介")],-1),m=n("p",null,"Flask 是一个基于 Python 的轻量级 Web 应用框架，它提供了简洁而灵活的工具和库，用于构建 Web 应用程序。Flask 的设计理念是简单而易扩展，它鼓励开发者使用自己喜欢的工具和库来构建 Web 应用。",-1),b=n("blockquote",null,[n("p",null,"🌐 网站")],-1),g={href:"https://flask.net.cn/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://flask.palletsprojects.com/en/2.3.x/",target:"_blank",rel:"noopener noreferrer"},x=n("h4",{id:"flask扩展",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#flask扩展","aria-hidden":"true"},"#"),s(" Flask扩展")],-1),y={class:"custom-container details"},I=n("summary",null,"Flask-SocketIO",-1),S={href:"https://flask-socketio.readthedocs.io/en/latest/",target:"_blank",rel:"noopener noreferrer"},q=n("p",null,"Flask-SocketIO 使 Flask 应用程序能够访问客户端和服务器之间的低延迟双向通信。 客户端应用程序可以使用 Javascript、Python、C、Java 和 Swift 中的任何 SocketIO 客户端库或任何其他兼容客户端来建立与服务器的永久连接。",-1),F=n("h3",{id:"django",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#django","aria-hidden":"true"},"#"),s(" Django")],-1),T=n("blockquote",null,[n("p",null,"📜简介")],-1),j=n("blockquote",null,[n("p",null,"🌐 网站")],-1),w={href:"https://flask.net.cn/",target:"_blank",rel:"noopener noreferrer"},C=d(`<h4 id="部署" tabindex="-1"><a class="header-anchor" href="#部署" aria-hidden="true">#</a> 部署</h4><details class="custom-container details"><summary>Gunicorn部署</summary><ol><li>环境安装</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> gunicorn
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>配置<code>gunicorn.py</code>文件</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 项目根目录下创建文件</span>
<span class="token function">vim</span> gunicorn.py
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> gunicorn.py
<span class="token builtin class-name">bind</span> <span class="token operator">=</span> <span class="token string">&quot;0.0.0.0:8000&quot;</span>
<span class="token comment"># workers是工作线程数，一般设置成：服务器CPU个数 + 1</span>
workers <span class="token operator">=</span> <span class="token number">1</span>
<span class="token comment">#./代表当前目录</span>
errorlog <span class="token operator">=</span> <span class="token string">&#39;./logs/gunicorn.error.log&#39;</span>
accesslog <span class="token operator">=</span> <span class="token string">&#39;./logs/gunicorn.access.log&#39;</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>
<span class="token comment"># 创建log文件</span>
<span class="token function">mkdir</span> log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>配置<code>setting.py</code>文件</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>STATIC_URL <span class="token operator">=</span> <span class="token string">&#39;/static/&#39;</span>

STATIC_ROOT <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span> <span class="token string">&#39;static1&#39;</span><span class="token punctuation">)</span>
STATICFILES_DIRS <span class="token operator">=</span> <span class="token punctuation">[</span>
os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span><span class="token string">&#39;static&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>启动与停止</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 启动</span>
gunicorn data_cloud_processing.wsgi <span class="token parameter variable">-c</span> gunicorn.py
<span class="token comment"># 停止</span>
pstree -ap<span class="token operator">|</span><span class="token function">grep</span> gunicorn
<span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token function">id</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="tornado" tabindex="-1"><a class="header-anchor" href="#tornado" aria-hidden="true">#</a> Tornado</h3><blockquote><p>📜简介</p></blockquote><p>异步web框架</p><blockquote><p>🌐 网站</p></blockquote>`,6),E={href:"https://flask.net.cn/",target:"_blank",rel:"noopener noreferrer"};function P(A,B){const t=l("router-link"),e=l("ExternalLinkIcon");return c(),r("div",null,[u,n("nav",h,[n("ul",null,[n("li",null,[a(t,{to:"#网络框架"},{default:o(()=>[s("网络框架")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#flask"},{default:o(()=>[s("Flask")]),_:1})]),n("li",null,[a(t,{to:"#django"},{default:o(()=>[s("Django")]),_:1})]),n("li",null,[a(t,{to:"#tornado"},{default:o(()=>[s("Tornado")]),_:1})])])])])]),k,_,v,m,b,n("ol",null,[n("li",null,[n("a",g,[s("文档"),a(e)])]),n("li",null,[n("a",f,[s("Flask扩展"),a(e)])])]),x,n("details",y,[I,n("p",null,[n("a",S,[s("文档"),a(e)])]),q]),F,T,j,n("ol",null,[n("li",null,[n("a",w,[s("文档"),a(e)])])]),C,n("ol",null,[n("li",null,[n("a",E,[s("文档"),a(e)])])])])}const O=i(p,[["render",P],["__file","Python框架.html.vue"]]);export{O as default};

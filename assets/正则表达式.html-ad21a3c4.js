import{_ as p,r as o,o as l,c,a as n,d as e,w as t,b as s,e as i}from"./app-f6817a80.js";const r={},d=n("h1",{id:"正则表达式",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#正则表达式","aria-hidden":"true"},"#"),s(" 正则表达式")],-1),u={class:"table-of-contents"},k=i(`<h2 id="基础语法" tabindex="-1"><a class="header-anchor" href="#基础语法" aria-hidden="true">#</a> 基础语法</h2><h3 id="字符类" tabindex="-1"><a class="header-anchor" href="#字符类" aria-hidden="true">#</a> 字符类</h3><p><code>.</code>匹配任意一个字符</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>t<span class="token punctuation">.</span>
test<span class="token operator">-</span><span class="token operator">&gt;</span>te
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>[]</code>匹配括号中的任意一个字符</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">[</span>t<span class="token punctuation">]</span>e
test<span class="token operator">-</span><span class="token operator">&gt;</span>te
<span class="token punctuation">[</span>t<span class="token punctuation">]</span>a
tad<span class="token operator">-</span><span class="token operator">&gt;</span>ta
<span class="token punctuation">[</span>te<span class="token punctuation">]</span>s
tserses<span class="token operator">-</span><span class="token operator">&gt;</span>ts<span class="token operator">&amp;&amp;</span>es
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>-</code>[]内表示字符串范围</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">[</span>a<span class="token operator">-</span>f<span class="token punctuation">]</span>e
eesabae<span class="token operator">-</span><span class="token operator">&gt;</span>ee<span class="token operator">&amp;&amp;</span>ae
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>^</code>位于[]的开头，匹配除括号中的字符串之外的任意一个字符串</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">[</span><span class="token operator">^</span>a<span class="token operator">-</span>f<span class="token punctuation">]</span>e
eesabge<span class="token operator">-</span><span class="token operator">&gt;</span>ge
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数量限定符" tabindex="-1"><a class="header-anchor" href="#数量限定符" aria-hidden="true">#</a> 数量限定符</h3><p><code>?</code>紧跟在它前面的单元应该匹配零次或一次</p><div class="language-GO line-numbers-mode" data-ext="GO"><pre class="language-GO"><code>[0-9]?\\.[0-9]
0.9-&gt;0.9
1.9-&gt;1.9
11.9-&gt;1.9
a.9-&gt;.9
[0-9]?\\.[0-9]?
1.-&gt;1.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>+</code>紧跟在它前面的单元应该匹配一次或多次</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>?\\<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span>
<span class="token number">1.9</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">1.9</span>
<span class="token number">11.9</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">1.9</span>
<span class="token number">1.999</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">1.999</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>*</code>紧跟在它前面的单元应该匹配零次或多次</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>?\\<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span>
<span class="token number">1.</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">1.</span>
<span class="token number">11.9</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">1.9</span>
<span class="token number">1.999</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">1.999</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>{N}</code>紧跟在它前面的单元应该精确匹配N次</p><div class="language-GO line-numbers-mode" data-ext="GO"><pre class="language-GO"><code>[0-9]{2}\\.[0-9]*
1.
11.9-&gt;11.9
1.999
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>{N,}</code>紧跟在它前面的单元格应该至少匹配N次</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">}</span>\\<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">1.11</span><span class="token number">.9111</span><span class="token number">.999</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">111.999</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>{N,M}</code>紧跟在它前面的单元格应该至少匹配N次至多匹配M次</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">}</span>\\<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">1.</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">1.11</span><span class="token number">.9</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">11.9111</span><span class="token number">.999</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token number">11.999</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="单元限定符" tabindex="-1"><a class="header-anchor" href="#单元限定符" aria-hidden="true">#</a> 单元限定符</h3><p><code>()</code>可以将一部分正则表达式组成一个单元，可以对单元使用数量限定符</p><h3 id="模式修饰符" tabindex="-1"><a class="header-anchor" href="#模式修饰符" aria-hidden="true">#</a> 模式修饰符</h3><blockquote><p>单行模式</p></blockquote><p><code>?s</code>表示更改<code>.</code>的含义，使它与每一个字符匹配，包括换行符</p><div class="language-GO line-numbers-mode" data-ext="GO"><pre class="language-GO"><code>&lt;span&gt;(?s:(.*?))&lt;/span&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="常用正则规则" tabindex="-1"><a class="header-anchor" href="#常用正则规则" aria-hidden="true">#</a> 常用正则规则</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code># 邮箱校验
reg<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> regexp<span class="token punctuation">.</span><span class="token function">Compile</span><span class="token punctuation">(</span><span class="token string">\`[\\w\\.]+@\\w+\\.[a-z]{2,3}(\\.[a-z]{2,3})?\`</span><span class="token punctuation">)</span>
res <span class="token operator">:=</span> reg<span class="token punctuation">.</span><span class="token function">FindString</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="python正则表达式" tabindex="-1"><a class="header-anchor" href="#python正则表达式" aria-hidden="true">#</a> python正则表达式</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> re

a <span class="token operator">=</span> <span class="token string">&#39;abc12331231de&#39;</span>
ret <span class="token operator">=</span> re<span class="token punctuation">.</span>findadd<span class="token punctuation">(</span>
	<span class="token string">&#39;abc(.*)de&#39;</span><span class="token punctuation">,</span>
    a
<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>
<span class="token number">12331231</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>

<span class="token comment"># 贪婪模式(一次匹配最多)</span>
b <span class="token operator">=</span> <span class="token string">&#39;abc110de123de&#39;</span>
ret <span class="token operator">=</span> re<span class="token punctuation">.</span>findadd<span class="token punctuation">(</span>
	<span class="token string">&#39;abc(.*)de&#39;</span><span class="token punctuation">,</span>
    b<span class="token punctuation">,</span>
<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>
110de123
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>

<span class="token comment"># 非贪婪模式</span>
c <span class="token operator">=</span> <span class="token string">&#39;abc110de123de&#39;</span>
ret <span class="token operator">=</span> re<span class="token punctuation">.</span>findadd<span class="token punctuation">(</span>
	<span class="token string">&#39;abc(.*?)de&#39;</span><span class="token punctuation">,</span>
    c<span class="token punctuation">,</span>
<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>
<span class="token number">110</span> 
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="go正则表达式" tabindex="-1"><a class="header-anchor" href="#go正则表达式" aria-hidden="true">#</a> Go正则表达式</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// 解析编译正则表达式</span>
<span class="token keyword">func</span> <span class="token function">MustComplie</span><span class="token punctuation">(</span>str <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">*</span>Regexp
<span class="token comment">// 提取信息</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>re <span class="token operator">*</span>Regexp<span class="token punctuation">)</span> <span class="token function">FindAllStringSubmatch</span><span class="token punctuation">(</span>s <span class="token builtin">string</span><span class="token punctuation">,</span>n <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例" tabindex="-1"><a class="header-anchor" href="#案例" aria-hidden="true">#</a> 案例</h3><h4 id="匹配字符" tabindex="-1"><a class="header-anchor" href="#匹配字符" aria-hidden="true">#</a> 匹配字符</h4><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main
<span class="token keyword">import</span> <span class="token punctuation">(</span>	
    <span class="token string">&quot;fmt&quot;</span>	
    <span class="token string">&quot;regexp&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>	str <span class="token operator">:=</span> <span class="token string">&quot;abc a7c mfc cat 8ca azc cba&quot;</span>	
             <span class="token comment">// 编译正则表达式	</span>
             ret <span class="token operator">:=</span> regexp<span class="token punctuation">.</span><span class="token function">MustCompile</span><span class="token punctuation">(</span><span class="token string">\`a.c\`</span><span class="token punctuation">)</span>	
             <span class="token comment">// 提取信息	</span>
             alls <span class="token operator">:=</span> ret<span class="token punctuation">.</span><span class="token function">FindAllStringSubmatch</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>	
             fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>alls<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="匹配小数" tabindex="-1"><a class="header-anchor" href="#匹配小数" aria-hidden="true">#</a> 匹配小数</h4><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main
<span class="token keyword">import</span> <span class="token punctuation">(</span>	
    <span class="token string">&quot;fmt&quot;</span>	
    <span class="token string">&quot;regexp&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>	
    str <span class="token operator">:=</span> <span class="token string">&quot;3.14 123.123 .68 haha 1.0 abc 7. ab.3 66.6 123.&quot;</span>	
    ret <span class="token operator">:=</span> regexp<span class="token punctuation">.</span><span class="token function">MustCompile</span><span class="token punctuation">(</span><span class="token string">\`[0-9]+\\.[0-9]+\`</span><span class="token punctuation">)</span>    
    ret <span class="token operator">:=</span> regexp<span class="token punctuation">.</span><span class="token function">MustCompile</span><span class="token punctuation">(</span><span class="token string">\`\\d+\\.\\d+\`</span><span class="token punctuation">)</span>	
    alls <span class="token operator">:=</span> ret<span class="token punctuation">.</span><span class="token function">FindAllStringSubmatch</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>	
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>alls<span class="token punctuation">)</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="javascript正则表达式" tabindex="-1"><a class="header-anchor" href="#javascript正则表达式" aria-hidden="true">#</a> JavaScript正则表达式</h2><p>正则表达式写法：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>var re=new RegExp(&#39;规则&#39;, &#39;可选参数&#39;);
var re=/规则/参数;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>正则默认规则</strong> 匹配成功就结束，不会继续匹配，区分大小写</p><h3 id="匹配规则" tabindex="-1"><a class="header-anchor" href="#匹配规则" aria-hidden="true">#</a> 匹配规则</h3><h4 id="普通字符匹配" tabindex="-1"><a class="header-anchor" href="#普通字符匹配" aria-hidden="true">#</a> 普通字符匹配</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>如：/a/ 匹配字符 ‘a’，/a,b/ 匹配字符 ‘a,b’
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="转义字符匹配" tabindex="-1"><a class="header-anchor" href="#转义字符匹配" aria-hidden="true">#</a> 转义字符匹配</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>\\d 匹配一个数字，即<span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span>
\\<span class="token constant">D</span> 匹配一个非数字，即除了<span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span>
\\w 匹配一个单词字符（字母、数字、下划线）
\\<span class="token constant">W</span> 匹配任何非单词字符。等价于<span class="token punctuation">[</span><span class="token operator">^</span><span class="token constant">A</span><span class="token operator">-</span>Za<span class="token operator">-</span>z0<span class="token operator">-</span>9_<span class="token punctuation">]</span>
\\s 匹配一个空白符
\\<span class="token constant">S</span> 匹配一个非空白符
<span class="token punctuation">.</span> 匹配一个任意字符
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> sTr01 <span class="token operator">=</span> <span class="token string">&#39;123456asdf&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> re01 <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
<span class="token comment">//匹配纯数字字符串</span>
<span class="token keyword">var</span> re02 <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
<span class="token function">alert</span><span class="token punctuation">(</span>re01<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>sTr01<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//弹出true</span>
<span class="token function">alert</span><span class="token punctuation">(</span>re02<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>sTr01<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//弹出false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="量词-对左边的匹配字符定义个数" tabindex="-1"><a class="header-anchor" href="#量词-对左边的匹配字符定义个数" aria-hidden="true">#</a> 量词：对左边的匹配字符定义个数</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">?</span> 出现零次或一次（最多出现一次）
<span class="token operator">+</span> 出现一次或多次（至少出现一次）
<span class="token operator">*</span> 出现零次或多次（任意次）
<span class="token punctuation">{</span>n<span class="token punctuation">}</span> 出现n次
<span class="token punctuation">{</span>n<span class="token punctuation">,</span>m<span class="token punctuation">}</span> 出现n到m次
<span class="token punctuation">{</span>n<span class="token punctuation">,</span><span class="token punctuation">}</span> 至少出现n次
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="任意一个或者范围" tabindex="-1"><a class="header-anchor" href="#任意一个或者范围" aria-hidden="true">#</a> 任意一个或者范围</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">[</span>abc123<span class="token punctuation">]</span> <span class="token operator">:</span> 匹配‘abc123’中的任意一个字符
<span class="token punctuation">[</span>a<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">:</span> 匹配a到z或者<span class="token number">0</span>到<span class="token number">9</span>中的任意一个字符
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="限制开头结尾" tabindex="-1"><a class="header-anchor" href="#限制开头结尾" aria-hidden="true">#</a> 限制开头结尾</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">^</span> 以紧挨的元素开头
$ 以紧挨的元素结尾
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="修饰参数" tabindex="-1"><a class="header-anchor" href="#修饰参数" aria-hidden="true">#</a> 修饰参数</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>g： global，执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）
i： ingore <span class="token keyword">case</span>，忽略大小写，默认大小写敏感
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="常用方法" tabindex="-1"><a class="header-anchor" href="#常用方法" aria-hidden="true">#</a> 常用方法</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>test
用法：正则<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>字符串<span class="token punctuation">)</span> 匹配成功，就返回真，否则就返回假
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="常用正则规则-1" tabindex="-1"><a class="header-anchor" href="#常用正则规则-1" aria-hidden="true">#</a> 常用正则规则</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//用户名验证：(数字字母或下划线6到20位)</span>
<span class="token keyword">var</span> reUser <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\w{6,20}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>

<span class="token comment">//邮箱验证：        </span>
<span class="token keyword">var</span> reMail <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-z0-9][\\w\\.\\-]*@[a-z0-9\\-]+(\\.[a-z]{2,5}){1,2}$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">;</span>

<span class="token comment">//密码验证：</span>
<span class="token keyword">var</span> rePass <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\\w!@#$%^&amp;*]{6,20}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>

<span class="token comment">//手机号码验证：</span>
<span class="token keyword">var</span> rePhone <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^1[34578]\\d{9}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,63);function v(m,b){const a=o("router-link");return l(),c("div",null,[d,n("nav",u,[n("ul",null,[n("li",null,[e(a,{to:"#基础语法"},{default:t(()=>[s("基础语法")]),_:1}),n("ul",null,[n("li",null,[e(a,{to:"#字符类"},{default:t(()=>[s("字符类")]),_:1})]),n("li",null,[e(a,{to:"#数量限定符"},{default:t(()=>[s("数量限定符")]),_:1})]),n("li",null,[e(a,{to:"#单元限定符"},{default:t(()=>[s("单元限定符")]),_:1})]),n("li",null,[e(a,{to:"#模式修饰符"},{default:t(()=>[s("模式修饰符")]),_:1})])])]),n("li",null,[e(a,{to:"#常用正则规则"},{default:t(()=>[s("常用正则规则")]),_:1})]),n("li",null,[e(a,{to:"#python正则表达式"},{default:t(()=>[s("python正则表达式")]),_:1})]),n("li",null,[e(a,{to:"#go正则表达式"},{default:t(()=>[s("Go正则表达式")]),_:1}),n("ul",null,[n("li",null,[e(a,{to:"#案例"},{default:t(()=>[s("案例")]),_:1})])])]),n("li",null,[e(a,{to:"#javascript正则表达式"},{default:t(()=>[s("JavaScript正则表达式")]),_:1}),n("ul",null,[n("li",null,[e(a,{to:"#匹配规则"},{default:t(()=>[s("匹配规则")]),_:1})]),n("li",null,[e(a,{to:"#常用正则规则-1"},{default:t(()=>[s("常用正则规则")]),_:1})])])])])]),k])}const h=p(r,[["render",v],["__file","正则表达式.html.vue"]]);export{h as default};
